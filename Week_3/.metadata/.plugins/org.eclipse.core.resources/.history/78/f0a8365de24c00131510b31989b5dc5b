/*
 * Project:	RecipeMe
 * 
 * Package: com.daletupling.recipeme
 * 
 * Author: 	Dale Tupling
 * 
 * Date:	November 8th, 2013
 * 
 */

package com.daletupling.recipeme;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;

public class MainActivity extends Activity {
	Context mContext;
	String[] recipeList;
	TextView netConnectionStatus;
	EditText eText;
	Button button;
	Boolean connection;


	String searchString;
	
	static String TAG = "NETWORK DATA - MAINACTIVITY";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		mContext = this;
		
		//recipeList = //RecipeArray

		//Create Linear Layout
		LinearLayout linearL = new LinearLayout(mContext);
		//Create Linear Layout parameters
		LayoutParams layoutP = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
		//Set layout Params
		linearL.setLayoutParams(layoutP);
		//Set Layout Orientation
		linearL.setOrientation(LinearLayout.VERTICAL);
		
		//Instantiate Edit Text
		eText = new EditText(this);
		LayoutParams eTextParam = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
		eText.setLayoutParams(eTextParam);
		
		//Button Instantiation and Params
		button = new Button(this);
		LayoutParams buttonP = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
		button.setLayoutParams(buttonP);
		button.setText("Search");
		
		netConnectionStatus = new TextView(this);
		
		
		//Get Connection Status
		connection = ConStatus.getStatus(mContext);

		//Statment Check
		if(ConStatus.getStatus(mContext)){
			//proceed with getting recipes			
			netConnectionStatus.setText("Connected To: " + ConStatus.netInfo.getTypeName());
			
			//getRecipeData();
			
		}else{
			//Display dialog box for no connection

            /*AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setMessage("No Internet Connection Detected. Check your connection and try again.")
                   .setCancelable(false)
                   .setPositiveButton("OK", new DialogInterface.OnClickListener() {
                       public void onClick(DialogInterface dialog, int id) {
                            dialog.cancel();
                       }
                   });
            AlertDialog alert = builder.create();
            alert.show();*/
			netConnectionStatus.setText("You are not connected to any network");
		}
		
		
		
		
		
		
		/*
        //Get JSON Data and Filter through data to build arrays for Team name, location and nickname
        public class getData extends AsyncTask<String, Void, String> {
                @Override
                protected String doInBackground(String... params) {
                        String responseString = "";
                        try {
                        	
                        		String initalURL = "http://food2fork.com/api/search?key=d93b07b1067a7a5a8add2ee2ab7005bd&q=";
                                URL url = new URL(initalURL+searchString);
                                responseString = ConStatus.getResponse(url);
                        } catch (MalformedURLException e) {
                                responseString = "UhOh we made a mistake";
                                Log.e(TAG, "ERROR:", e);

                        }
                        return responseString;
                }

                @Override
                protected void onPostExecute(String result) {
                        Log.i("TRYING JSON", "trying json");
                        try {

                                JSONObject jsonObject = new JSONObject(result);
                                // Get Array sports from JSONObject
                                JSONArray recipeArray = jsonObject.getJSONArray("recipe");
                                Log.i("THE RESULTS", recipeArray.toString());
                                        
                        } catch (JSONException e) {
                                Log.e("JSONException", "ERROR", e);
                                e.printStackTrace();
                        }
        
                }
        }
                */
		//Add text View
		linearL.addView(netConnectionStatus);
        //Add EditText to View
		linearL.addView(eText);
		//Add Button to View
		linearL.addView(button);
		//Set content view to programmatic Linear Layout
		setContentView(linearL);
	}


	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

}
